/*
 * This file is generated by jOOQ.
 */
package com.thee5176.ledger_command.record.domain.model.credential.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String username;
    private String password;
    private Boolean isEnabled;
    private Boolean isAccountNonExpired;
    private Boolean isCredentialsNonExpired;
    private Boolean isAccountNonLocked;
    private String firstname;
    private String lastname;
    private String email;

    public Users() {}

    public Users(Users value) {
        this.id = value.id;
        this.username = value.username;
        this.password = value.password;
        this.isEnabled = value.isEnabled;
        this.isAccountNonExpired = value.isAccountNonExpired;
        this.isCredentialsNonExpired = value.isCredentialsNonExpired;
        this.isAccountNonLocked = value.isAccountNonLocked;
        this.firstname = value.firstname;
        this.lastname = value.lastname;
        this.email = value.email;
    }

    public Users(
        Long id,
        String username,
        String password,
        Boolean isEnabled,
        Boolean isAccountNonExpired,
        Boolean isCredentialsNonExpired,
        Boolean isAccountNonLocked,
        String firstname,
        String lastname,
        String email
    ) {
        this.id = id;
        this.username = username;
        this.password = password;
        this.isEnabled = isEnabled;
        this.isAccountNonExpired = isAccountNonExpired;
        this.isCredentialsNonExpired = isCredentialsNonExpired;
        this.isAccountNonLocked = isAccountNonLocked;
        this.firstname = firstname;
        this.lastname = lastname;
        this.email = email;
    }

    /**
     * Getter for <code>credential.users.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>credential.users.id</code>.
     */
    public Users setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>credential.users.username</code>.
     */
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for <code>credential.users.username</code>.
     */
    public Users setUsername(String username) {
        this.username = username;
        return this;
    }

    /**
     * Getter for <code>credential.users.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>credential.users.password</code>.
     */
    public Users setPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Getter for <code>credential.users.is_enabled</code>.
     */
    public Boolean getIsEnabled() {
        return this.isEnabled;
    }

    /**
     * Setter for <code>credential.users.is_enabled</code>.
     */
    public Users setIsEnabled(Boolean isEnabled) {
        this.isEnabled = isEnabled;
        return this;
    }

    /**
     * Getter for <code>credential.users.is_account_non_expired</code>.
     */
    public Boolean getIsAccountNonExpired() {
        return this.isAccountNonExpired;
    }

    /**
     * Setter for <code>credential.users.is_account_non_expired</code>.
     */
    public Users setIsAccountNonExpired(Boolean isAccountNonExpired) {
        this.isAccountNonExpired = isAccountNonExpired;
        return this;
    }

    /**
     * Getter for <code>credential.users.is_credentials_non_expired</code>.
     */
    public Boolean getIsCredentialsNonExpired() {
        return this.isCredentialsNonExpired;
    }

    /**
     * Setter for <code>credential.users.is_credentials_non_expired</code>.
     */
    public Users setIsCredentialsNonExpired(Boolean isCredentialsNonExpired) {
        this.isCredentialsNonExpired = isCredentialsNonExpired;
        return this;
    }

    /**
     * Getter for <code>credential.users.is_account_non_locked</code>.
     */
    public Boolean getIsAccountNonLocked() {
        return this.isAccountNonLocked;
    }

    /**
     * Setter for <code>credential.users.is_account_non_locked</code>.
     */
    public Users setIsAccountNonLocked(Boolean isAccountNonLocked) {
        this.isAccountNonLocked = isAccountNonLocked;
        return this;
    }

    /**
     * Getter for <code>credential.users.firstname</code>.
     */
    public String getFirstname() {
        return this.firstname;
    }

    /**
     * Setter for <code>credential.users.firstname</code>.
     */
    public Users setFirstname(String firstname) {
        this.firstname = firstname;
        return this;
    }

    /**
     * Getter for <code>credential.users.lastname</code>.
     */
    public String getLastname() {
        return this.lastname;
    }

    /**
     * Setter for <code>credential.users.lastname</code>.
     */
    public Users setLastname(String lastname) {
        this.lastname = lastname;
        return this;
    }

    /**
     * Getter for <code>credential.users.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>credential.users.email</code>.
     */
    public Users setEmail(String email) {
        this.email = email;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.username == null) {
            if (other.username != null)
                return false;
        }
        else if (!this.username.equals(other.username))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.isEnabled == null) {
            if (other.isEnabled != null)
                return false;
        }
        else if (!this.isEnabled.equals(other.isEnabled))
            return false;
        if (this.isAccountNonExpired == null) {
            if (other.isAccountNonExpired != null)
                return false;
        }
        else if (!this.isAccountNonExpired.equals(other.isAccountNonExpired))
            return false;
        if (this.isCredentialsNonExpired == null) {
            if (other.isCredentialsNonExpired != null)
                return false;
        }
        else if (!this.isCredentialsNonExpired.equals(other.isCredentialsNonExpired))
            return false;
        if (this.isAccountNonLocked == null) {
            if (other.isAccountNonLocked != null)
                return false;
        }
        else if (!this.isAccountNonLocked.equals(other.isAccountNonLocked))
            return false;
        if (this.firstname == null) {
            if (other.firstname != null)
                return false;
        }
        else if (!this.firstname.equals(other.firstname))
            return false;
        if (this.lastname == null) {
            if (other.lastname != null)
                return false;
        }
        else if (!this.lastname.equals(other.lastname))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.isEnabled == null) ? 0 : this.isEnabled.hashCode());
        result = prime * result + ((this.isAccountNonExpired == null) ? 0 : this.isAccountNonExpired.hashCode());
        result = prime * result + ((this.isCredentialsNonExpired == null) ? 0 : this.isCredentialsNonExpired.hashCode());
        result = prime * result + ((this.isAccountNonLocked == null) ? 0 : this.isAccountNonLocked.hashCode());
        result = prime * result + ((this.firstname == null) ? 0 : this.firstname.hashCode());
        result = prime * result + ((this.lastname == null) ? 0 : this.lastname.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(username);
        sb.append(", ").append(password);
        sb.append(", ").append(isEnabled);
        sb.append(", ").append(isAccountNonExpired);
        sb.append(", ").append(isCredentialsNonExpired);
        sb.append(", ").append(isAccountNonLocked);
        sb.append(", ").append(firstname);
        sb.append(", ").append(lastname);
        sb.append(", ").append(email);

        sb.append(")");
        return sb.toString();
    }
}
