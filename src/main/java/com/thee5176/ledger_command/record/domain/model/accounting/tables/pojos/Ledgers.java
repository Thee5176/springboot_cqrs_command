/*
 * This file is generated by jOOQ.
 */
package com.thee5176.ledger_command.record.domain.model.accounting.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Ledgers implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private LocalDate date;
    private String description;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private Long ownerId;

    public Ledgers() {}

    public Ledgers(Ledgers value) {
        this.id = value.id;
        this.date = value.date;
        this.description = value.description;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.ownerId = value.ownerId;
    }

    public Ledgers(
        UUID id,
        LocalDate date,
        String description,
        LocalDateTime createdAt,
        LocalDateTime updatedAt,
        Long ownerId
    ) {
        this.id = id;
        this.date = date;
        this.description = description;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.ownerId = ownerId;
    }

    /**
     * Getter for <code>accounting.ledgers.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>accounting.ledgers.id</code>.
     */
    public Ledgers setId(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>accounting.ledgers.date</code>.
     */
    public LocalDate getDate() {
        return this.date;
    }

    /**
     * Setter for <code>accounting.ledgers.date</code>.
     */
    public Ledgers setDate(LocalDate date) {
        this.date = date;
        return this;
    }

    /**
     * Getter for <code>accounting.ledgers.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>accounting.ledgers.description</code>.
     */
    public Ledgers setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Getter for <code>accounting.ledgers.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>accounting.ledgers.created_at</code>.
     */
    public Ledgers setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>accounting.ledgers.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>accounting.ledgers.updated_at</code>.
     */
    public Ledgers setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>accounting.ledgers.owner_id</code>.
     */
    public Long getOwnerId() {
        return this.ownerId;
    }

    /**
     * Setter for <code>accounting.ledgers.owner_id</code>.
     */
    public Ledgers setOwnerId(Long ownerId) {
        this.ownerId = ownerId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Ledgers other = (Ledgers) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.date == null) {
            if (other.date != null)
                return false;
        }
        else if (!this.date.equals(other.date))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.ownerId == null) {
            if (other.ownerId != null)
                return false;
        }
        else if (!this.ownerId.equals(other.ownerId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.date == null) ? 0 : this.date.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.ownerId == null) ? 0 : this.ownerId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Ledgers (");

        sb.append(id);
        sb.append(", ").append(date);
        sb.append(", ").append(description);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(ownerId);

        sb.append(")");
        return sb.toString();
    }
}
