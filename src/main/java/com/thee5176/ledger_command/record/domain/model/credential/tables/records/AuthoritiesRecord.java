/*
 * This file is generated by jOOQ.
 */
package com.thee5176.ledger_command.record.domain.model.credential.tables.records;


import com.thee5176.ledger_command.record.domain.model.credential.tables.Authorities;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AuthoritiesRecord extends UpdatableRecordImpl<AuthoritiesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>credential.authorities.id</code>.
     */
    public AuthoritiesRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>credential.authorities.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>credential.authorities.username</code>.
     */
    public AuthoritiesRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>credential.authorities.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>credential.authorities.authority</code>.
     */
    public AuthoritiesRecord setAuthority(String[] value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>credential.authorities.authority</code>.
     */
    public String[] getAuthority() {
        return (String[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthoritiesRecord
     */
    public AuthoritiesRecord() {
        super(Authorities.AUTHORITIES);
    }

    /**
     * Create a detached, initialised AuthoritiesRecord
     */
    public AuthoritiesRecord(Long id, String username, String[] authority) {
        super(Authorities.AUTHORITIES);

        setId(id);
        setUsername(username);
        setAuthority(authority);
        resetTouchedOnNotNull();
    }

    /**
     * Create a detached, initialised AuthoritiesRecord
     */
    public AuthoritiesRecord(com.thee5176.ledger_command.record.domain.model.credential.tables.pojos.Authorities value) {
        super(Authorities.AUTHORITIES);

        if (value != null) {
            setId(value.getId());
            setUsername(value.getUsername());
            setAuthority(value.getAuthority());
            resetTouchedOnNotNull();
        }
    }
}
