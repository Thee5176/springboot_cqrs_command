/*
 * This file is generated by jOOQ.
 */
package com.thee5176.ledger_command.record.domain.model.accounting.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import com.thee5176.ledger_command.record.domain.model.accounting.enums.BalanceType;
import com.thee5176.ledger_command.record.domain.model.accounting.tables.LedgerItems;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LedgerItemsRecord extends UpdatableRecordImpl<LedgerItemsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>accounting.ledger_items.id</code>.
     */
    public LedgerItemsRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>accounting.ledger_items.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>accounting.ledger_items.ledger_id</code>.
     */
    public LedgerItemsRecord setLedgerId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>accounting.ledger_items.ledger_id</code>.
     */
    public UUID getLedgerId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>accounting.ledger_items.coa</code>.
     */
    public LedgerItemsRecord setCoa(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>accounting.ledger_items.coa</code>.
     */
    public Integer getCoa() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>accounting.ledger_items.amount</code>.
     */
    public LedgerItemsRecord setAmount(Double value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>accounting.ledger_items.amount</code>.
     */
    public Double getAmount() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>accounting.ledger_items.type</code>.
     */
    public LedgerItemsRecord setType(BalanceType value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>accounting.ledger_items.type</code>.
     */
    public BalanceType getType() {
        return (BalanceType) get(4);
    }

    /**
     * Setter for <code>accounting.ledger_items.created_at</code>.
     */
    public LedgerItemsRecord setCreatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>accounting.ledger_items.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>accounting.ledger_items.updated_at</code>.
     */
    public LedgerItemsRecord setUpdatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>accounting.ledger_items.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LedgerItemsRecord
     */
    public LedgerItemsRecord() {
        super(LedgerItems.LEDGER_ITEMS);
    }

    /**
     * Create a detached, initialised LedgerItemsRecord
     */
    public LedgerItemsRecord(UUID id, UUID ledgerId, Integer coa, Double amount, BalanceType type, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(LedgerItems.LEDGER_ITEMS);

        setId(id);
        setLedgerId(ledgerId);
        setCoa(coa);
        setAmount(amount);
        setType(type);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }

    /**
     * Create a detached, initialised LedgerItemsRecord
     */
    public LedgerItemsRecord(com.thee5176.ledger_command.record.domain.model.accounting.tables.pojos.LedgerItems value) {
        super(LedgerItems.LEDGER_ITEMS);

        if (value != null) {
            setId(value.getId());
            setLedgerId(value.getLedgerId());
            setCoa(value.getCoa());
            setAmount(value.getAmount());
            setType(value.getType());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetTouchedOnNotNull();
        }
    }
}
